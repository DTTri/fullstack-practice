#!/usr/bin/env python3
"""
Setup script to create .env file with OpenAI API key
"""

import os
from pathlib import Path
from rich.console import Console
from rich.prompt import Prompt

console = Console()

def setup_env_file():
    """Interactive setup for .env file"""
    console.print("[bold blue]üîë OptiBot Assistant - API Key Setup[/bold blue]")
    console.print()
    
    env_file = Path(".env")
    env_sample = Path(".env.sample")
    
    # Check if .env already exists
    if env_file.exists():
        console.print("[yellow]‚ö†Ô∏è .env file already exists[/yellow]")
        overwrite = Prompt.ask("Do you want to overwrite it?", choices=["y", "n"], default="n")
        if overwrite.lower() != "y":
            console.print("[green]‚úÖ Keeping existing .env file[/green]")
            return
    
    # Get API key from user
    console.print("üìã You need an OpenAI API key to use OptiBot Assistant")
    console.print("üîó Get your API key from: [link]https://platform.openai.com/api-keys[/link]")
    console.print()
    
    api_key = Prompt.ask("Enter your OpenAI API key", password=True)
    
    if not api_key or api_key.strip() == "":
        console.print("[red]‚ùå No API key provided. Setup cancelled.[/red]")
        return
    
    # Create .env file
    env_content = f"""# OpenAI API Configuration for OptiBot Assistant
# Generated by setup_env.py

OPENAI_API_KEY={api_key.strip()}

# Optional: Uncomment and modify these settings if needed
# MAX_CHUNK_SIZE=8000
# MIN_CHUNK_SIZE=100
# RATE_LIMIT_DELAY=0.5
"""
    
    try:
        with open(env_file, 'w') as f:
            f.write(env_content)
        
        console.print(f"[green]‚úÖ Created .env file successfully![/green]")
        console.print()
        console.print("[bold]üöÄ Next steps:[/bold]")
        console.print("1. Run: [cyan]python upload_to_openai.py --input ../normalizeWebContent/output --create-assistant[/cyan]")
        console.print("2. Test in OpenAI Playground with: 'How do I add a YouTube video?'")
        console.print("3. Take a screenshot of the response with citations")
        
    except Exception as e:
        console.print(f"[red]‚ùå Failed to create .env file: {e}[/red]")

def check_existing_env():
    """Check if API key is already set"""
    # Try to load from .env file
    from dotenv import load_dotenv
    load_dotenv()
    
    api_key = os.getenv('OPENAI_API_KEY')
    
    if api_key:
        console.print("[green]‚úÖ OpenAI API key is already configured[/green]")
        console.print(f"Key starts with: {api_key[:8]}...")
        console.print()
        console.print("[bold]üöÄ You're ready to run:[/bold]")
        console.print("[cyan]python upload_to_openai.py --input ../normalizeWebContent/output --create-assistant[/cyan]")
        return True
    else:
        console.print("[yellow]‚ö†Ô∏è No OpenAI API key found[/yellow]")
        return False

def main():
    """Main setup function"""
    console.print("[bold blue]ü§ñ OptiBot Assistant Environment Setup[/bold blue]")
    console.print("=" * 50)
    
    if not check_existing_env():
        console.print()
        setup_env_file()

if __name__ == '__main__':
    main()
